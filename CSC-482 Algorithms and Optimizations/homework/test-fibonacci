#!/bin/bash

TIMEFORMAT="real: %3R user: %3U sys: %4S"

# test fibonacci (recursive) 
for power in $(seq 1 26)
  do
    let size=2**$power
    time_output=$( { time ./hw1-fibonacci.o $size > /dev/null; } 2>&1)
    echo "[test-random] info: ./hw1-fibonacci.o $size, $time_output"
  done

  # test fibonacci (non-recursive) 
for power in $(seq 1 26)
  do
    let size=2**$power
    time_output=$( { time ./hw1-fibonacci.o -l $size > /dev/null; } 2>&1)
    echo "[test-random] info: ./hw1-fibonacci.o --looped $size, $time_output"
  done

  # test fibonacci (memoized) 
for power in $(seq 1 26)
  do
    let size=2**$power
    time_output=$( { time ./hw1-fibonacci.o -c $size > /dev/null; } 2>&1)
    echo "[test-random] info: ./hw1-fibonacci.o -cached $size, $time_output"
  done

  # test fibonacci (recursive) 
for power in $(seq 1 26)
  do
    let size=2**$power
    time_output=$( { time ./hw1-fibonacci.o -m $size > /dev/null; } 2>&1)
    echo "[test-random] info: ./hw1-fibonacci.o --matrixed $size, $time_output"
  done